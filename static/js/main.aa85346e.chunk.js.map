{"version":3,"sources":["App.js","index.js"],"names":["App","useState","moeda","setMoeda","codigo","setCodigo","valor","setValor","valorconvert","setValorconvert","dataconvert","setDataconvert","botaofalso","setBotaofalso","errorMessage","obtmoeda","a","url","console","log","fetch","then","response","json","data","useEffect","high","toFixed","create_date","http-equiv","content","Navbar","bg","variant","Brand","href","Nav","className","Link","Jumbotron","size","Card","Header","style","background","onChange","event","target","value","type","placeholder","step","disabled","onClick","preventDefault","obterMoeda","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa85346e.chunk.js","sourcesContent":["//Conversor de moedas do real\n//Giovani Lovatto Allegretti\n//import dos programas externos\nimport React, { useState, useEffect } from 'react'\nimport './app.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n//import dos componentes do bootstrap\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Card from 'react-bootstrap/Card'\n//import icones react\nimport { BiMoney } from \"react-icons/bi\";\n\n\n\nfunction App() {\n    //Definição de variaveis\n    const [moeda, setMoeda] = useState('USD')\n    const [codigo, setCodigo] = useState('')\n    const [valor, setValor] = useState('')\n    const [valorconvert, setValorconvert] = useState('')\n    const [dataconvert, setDataconvert] = useState('')\n    const [botaofalso, setBotaofalso] = useState(false)\n    const [errorMessage, setErrorMessage] = useState(\"Valor negativo é Invalido\")\n\n    //Função para fazer a conversão\n    useEffect(() => {\n        if (!valor || !codigo) {\n            return\n        }\n        console.log(codigo[0].high)\n        console.log(valor / codigo[0].high)         // até aqui é mostrado apenas no console para desbug\n        setValorconvert((valor / codigo[0].high).toFixed(2))      //parte mais importante do código aonde faz a conversão\n        setDataconvert((codigo[0].create_date))             //mostra a data atualizada da moeda\n\n        if (valor < 0) {\n            setValorconvert(errorMessage)       // if que define o erro caso o numero seja negativo\n        }\n    }, [codigo, valor])\n\n    useEffect(()=>{\n        setBotaofalso(!valor)               //deixar o botão converter desabilitado\n    }, [valor])\n\n\n    //função async que carrega a API\n    async function obterMoeda(obtmoeda) {\n        let url = `https://economia.awesomeapi.com.br/json/${moeda}`\n        console.log(url)\n        await fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setCodigo(data)\n                console.log('Dados Carregados com sucesso')\n\n            })\n    }\n\n    return (\n        //apartir daqui é o front-end aonde será trabalhada a formatação com a organização do projeto.\n        <>\n            <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\"></meta>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#inicio\"><BiMoney />Conversor de Real para outras moedas</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#fatecitu\" className=\"fatecitu\">Fatec Itu</Nav.Link>\n                </Nav>\n            </Navbar>\n\n            <Jumbotron>\n                <h1><BiMoney size=\"60px\" bg=\"success\" />Conversor de Moeda</h1>\n\n\n            </Jumbotron>\n            <Card className=\"cartao\" bg=\"dark\">\n                <Card.Header className=\"cabecalho\" style={{ background: \"#b3f37e\" }} >Conversor</Card.Header>\n                <form className=\"quadro\">\n                    <label className=\"fonteform\"> Qual moeda gostaria de converter do real?</label>\n\n                    <br></br>\n\n                    <select onChange={event => setMoeda(event.target.value)} value={moeda} className=\"valorcss\">\n                        <option value=\"BRL\">Real</option>\n                        <option value=\"USD\">Dolar</option>\n                        <option value=\"USDT\">Dolar Turismo</option>\n                        <option value=\"CAD\">Dolar Canadense</option>\n                        <option value=\"EUR\">Euro</option>\n                        <option value=\"GBP\">Libra Esterlina</option>\n                        <option value=\"ARS\">Peso Argentino</option>\n                        <option value=\"BTC\">Bitcoin</option>\n                        <option value=\"LTC\">Litecoin</option>\n                        <option value=\"JPY\">Yene Japonês</option>\n                        <option value=\"CHF\">Franco Suiço</option>\n                        <option value=\"AUD\">Dólar Australiano</option>\n                        <option value=\"CNY\">Yuan Chinês</option>\n                        <option value=\"ILS\">Novo Shekel Israelense</option>\n                        <option value=\"ETH\">Ethereum</option>\n                        <option value=\"XRP\">Ripple</option>\n                    </select>\n                    <br></br>\n\n                    <label className=\"fonteform\">Qual a quantidade que deseja converter</label>\n                    <input type=\"number\" className=\"valorcss\"\n                        onChange={event => setValor(event.target.value)} value={valor}\n                        placeholder=\"Digite seu valor\"\n                        step=\"0.2\">\n                    </input>\n                    <br></br>\n\n                    <button className=\"botao\" disabled={botaofalso} onClick={(event) => {\n                        event.preventDefault();\n                        obterMoeda(moeda)\n                    }}>Converter</button>\n                    <br></br>\n\n                    <label className=\"fonteform\"> Sua moeda convertida foi:</label>\n                    <br></br>\n                    <input type=\"text\" className=\"resultadocss\" value={valorconvert}>\n                    </input>\n                    <br></br>\n                    <label className=\"fonteform\">Data de conversão atualizada em: {dataconvert}</label>\n                </form>\n            </Card>\n        </>\n    )\n}\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}